# {{ ansible_managed }}
{%- set public_host_ips = ansible_play_hosts | map('extract', hostvars, ['ansible_eth0', 'ipv4', 'address']) | list -%}
{%- set private_host_ips = ansible_play_hosts | map('extract', hostvars, ['ansible_eth1', 'ipv4', 'address']) | list -%}


!includedir /etc/mysql/conf.d/
!includedir /etc/mysql/mysql.conf.d/

[mysqld]
server_id = {{ ansible_play_hosts.index(inventory_hostname) + 1 }}
bind-address = "{{ (ansible_eth1 | default(ansible_lo)).ipv4.address if mysql_private_networking else ansible_eth0.ipv4.address }}"
max_allowed_packet = 1000M
wait_timeout = 48800000
skip_name_resolve
max_connections = {{ mysql_max_connections }}

{% if mysql_sql_mode %}
sql_mode = {{ mysql_sql_mode }}
{% endif %}


# Logging configuration.
{% if mysql_log_error == 'syslog' or mysql_log == 'syslog' %}
syslog
syslog-tag = {{ mysql_syslog_tag }}
{% else %}
{% if mysql_log %}
log = {{ mysql_log }}
{% endif %}
log-error = {{ mysql_log_error }}
{% endif %}

{% if mysql_slow_query_log_enabled %}
# Slow query log configuration.
slow_query_log = 1
slow_query_log_file = {{ mysql_slow_query_log_file }}
long_query_time = {{ mysql_slow_query_time }}
{% endif %}


# * IMPORTANT: Group replication settings 

gtid_mode = ON
enforce_gtid_consistency = ON
master_info_repository = TABLE
relay_log_info_repository = TABLE
expire_logs_days = 3
binlog_checksum = NONE
log_slave_updates = ON
log_bin = binlog
binlog_format = ROW
transaction_write_set_extraction = XXHASH64
loose-group_replication_bootstrap_group = OFF
loose-group_replication_start_on_boot = ON
loose-group_replication_ssl_mode = REQUIRED
loose-group_replication_recovery_use_ssl = 1
## Shared replication group configuration
loose-group_replication_group_name = "{{ mysql_group_replication_uuid }}"
{% if mysql_private_networking %}
loose-group_replication_ip_whitelist = "{{ private_host_ips | join(',') }}"
loose-group_replication_group_seeds = "{{ private_host_ips | zip_longest([], fillvalue=':33061') | map('join') | join(',') }}"
{% else %}
loose-group_replication_ip_whitelist = "{{ public_host_ips | join(',') }}"
loose-group_replication_group_seeds = "{{ public_host_ips | zip_longest([], fillvalue=':33061') | map('join') | join(',') }}"
{% endif %}
loose-group_replication_allow_local_disjoint_gtids_join=ON
## Single or Multi-primary mode? Uncomment these two lines
## for multi-primary mode, where any host can accept writes
# loose-group_replication_single_primary_mode = OFF
# loose-group_replication_enforce_update_everywhere_checks = ON
report_host = "{{ (ansible_eth1 | default(ansible_lo)).ipv4.address if mysql_private_networking else ansible_eth0.ipv4.address }}"
loose-group_replication_local_address = "{{ (ansible_eth1 | default(ansible_lo)).ipv4.address if mysql_private_networking else ansible_eth0.ipv4.address }}:33061"

# ****** End ******

{% if mysql_config_include_files | length %}
# * IMPORTANT: Additional settings that can override those from this file!
#   The files must end with '.cnf', otherwise they'll be ignored.
#
!includedir {{ mysql_config_include_dir }}
{% endif %}