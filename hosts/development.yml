all:
  vars:
    ansible_connection: ssh
    deny_default_user: 'ubuntu'
    prod_consul_datacenter: 'DO-BLR'
    prod_consul_domain: 'charcoaleats'
    consul_server_ip: '139.59.79.222' # Consul Private IP
    redis_password: 473d67d08db4314ef0366d2504e37e9f44168abe
    redis_deepstream_port: 6363
    redis_deepstream_server: '159.89.172.11'
    deepstream_websocket_port_lb: 443
    deepstream_websocket_ip_lb: 159.89.163.173
    deepstream_http_port: 8787
    deepstream_websocket_port: 5757
    pm2_user: root
    nodejs_application_port: 8888
    node_application_user: scylla
    deepstream_auth_url: https://dev.charcoaleats.com/dashboard/open/live/authenticateUser
    git_host: gitlab.charcoalbiryani.com
    nodejs_install_npm_user: root
    env_host_name: dev.charcoaleats.com
    nodejs_cpo_port: 8001
    nodejs_api_port: 8888
    mysql_replication_master: '10.0.9.226'
    admin_user: cyclops
    users:
      - name: "lancelot" # Admin User
        groups:
          - sudo
        keys:
          - "{{ lookup('file', '/home/cloud9/workspace/charcoal-ansible-scripts/pub_keys/lancelot.pub') }}"
      - name: "cyclops" # Ansible User 
        groups:
          - sudo
        keys:
          - "{{ lookup('file', '/home/cloud9/workspace/charcoal-ansible-scripts/pub_keys/cyclops.pub') }}"    
    shared_mysql_user: { name: "charcoaleatsAdmin", password: "Striker_Axel01" , host: "%" } 
    proxysql_mysql_monitor: { name: monitor,  password: 'amitkverma' , host: "%" }
    shared_mysql_database: "CB_PROD_MIRROR_DEV"

deepstream_server:
  hosts:
    52.47.75.83:
      server_name: 'deepstream-1'
  vars:
    ansible_ssh_user: ubuntu
    netdata_mode: 'slave'
    netdata_monitor_application: []
    consul_mode: 'client'
    firewall_open_ports: [5757,8300,8301,19999,6363]
    nginx_custom_vhost: netdata
    is_redis_msg_plugin_used: false
    monitor_application_name: 'deepstream'
    deepstream_auth_enable: true


nodejs_server:
  hosts:
    206.189.142.78:
      server_name: 'dev-application-server-1'
    206.189.129.80:
      server_name: 'dev-application-server-2'
  vars:
    ansible_ssh_user: root
    netdata_mode: 'slave'
    netdata_monitor_application: ['nodejs']
    consul_mode: 'client'
    firewall_open_ports: [8888,8300,8301,19999]
    monitor_application_name: 'nodejs'
    health_check_script_enabled: true


redis_cache:
  hosts:
    35.180.2.194:
  vars:
    ansible_ssh_user: ubuntu
    server_name: 'preprod-redis-msg-bus'
    netdata_mode: 'slave'
    netdata_monitor_application: ['redis']
    consul_mode: 'client'
    firewall_open_ports: [8300,8301,19999,6363]
    nginx_custom_vhost: netdata
    redis_port: '{{ redis_deepstream_port }}'
    monitor_application_name: 'redis_msg_bus'
    health_check_script_enabled: true

elk_stack_server:
  hosts:
    35.180.227.14:
  vars:
    ansible_ssh_user: ubuntu
    server_name: 'elk-stack'
    nginx_custom_vhost: 'elk'
    logstash_enabled_on_boot: true
    logstash_install_plugins:
      - logstash-input-beats
    logstash_elasticsearch_hosts:
      - http://localhost:9200
    logstash_listen_port_beats: 5044

mysql_server:
  hosts:
    206.189.137.76:
  vars:
    ansible_ssh_user: root
    server_name: 'mysql'


mysql_master: 
  hosts:
    142.93.214.247:
  vars:
    ansible_ssh_user: root
    server_name: 'mysql'
    mysql_bind_address: '{{ mysql_replication_master }}'
    mysql_server_id: 1
    mysql_replication_role: 'master'
    mysql_replication_user: { name: slave_user, host: '%', password: amitkverma }


mysql_slave: 
  hosts:
    13.126.60.50:
      mysql_server_id: 11
    13.233.86.15:
      mysql_server_id: 12
  vars:
    ansible_ssh_user: ubuntu
    server_name: 'mysql'
    mysql_replication_role: 'slave'
    mysql_replication_user: { name: slaveUser, host: '%', password: 'amitkverma' } 
    enable_mysql_slave_replication: true


metabase:
  hosts:
    139.59.61.83:
  vars:
    ansible_ssh_user: root
    metabase_db_pass: amitkverma

mysql_replication: 
  hosts:
    10.0.9.226:
      primary: True
    10.0.11.103:
      primary: False
    10.0.10.147:
      primary: False
  vars:
    ansible_ssh_user: ubuntu
    server_name: 'mysql'
    mysql_group_replication: true
    mysql_group_replication_uuid: "a89aee1a-ea52-11e8-88d0-3611b45eb584"
    mysql_proxysql_backend_config: true

proxysql_server:
  hosts:
    13.233.127.110:
  vars:
    ansible_ssh_user: ubuntu
    server_name: 'mysql'
    shared_multi_primary: true
    shared_require_ssl: false
    shared_private_networking: true

teleport_auth_proxy:
  hosts:
    13.231.154.6:
  vars:
    ansible_ssh_user: ubuntu
    teleport_ssh_enabled: false
    teleport_auth_tokens_node:
      - "4035023a-a53c-4053-93e0-f7b00f103495"

teleport_nodes:
  hosts:
    54.92.50.198:
  vars:
    ansible_ssh_user: ubuntu
    teleport_ssh_enabled: true
    teleport_auth_enabled: false
    teleport_proxy_enabled: false
    teleport_auth_servers:
      - "13.231.154.6"
    teleport_auth_token: "4035023a-a53c-4053-93e0-f7b00f103495"

cloud9_server:
  hosts:
    35.180.250.7:
  vars:
    ansible_ssh_user: ubuntu
    ansible_install_method: apt
    should_install_pm2_on_nodejs: false

ansible_host:
  hosts:
    18.182.10.144:
  vars:
    ansible_ssh_user: ubuntu
    ansible_install_method: apt

ipaservers:
  hosts:
    52.199.11.119:
  vars:
    ansible_ssh_user: ubuntu
    ipaserver_hostname: ipa-test.charcoaleats.com
    ipaserver_domain: charcoaleats.com
    ipaserver_realm: CHARCOALEATS.COM
    ipaadmin_password: amitkverma
    ipadm_password: amitkverma
    ipaserver_setup_dns: yes
    ipaserver_auto_forwarders: yes
    ipaserver_allow_zone_overlap: yes
    ipaclient_mkhomedir: yes
    ipaserver_no_ui_redirect: no

ipaclients:
  hosts:
    3.112.37.156:
    54.64.102.24:
    3.112.44.62:
  vars:
    ansible_ssh_user: ubuntu
    ipaclient_domain: charcoaleats.com
    ipaserver_realm: CHARCOALEATS.COM
    ipaadmin_principal: admin
    ipaadmin_password: amitkverma
    ipaclient_allow_repair: yes
    krb5_packages: krb5-k5tls


provision_server:
  hosts:
    18.182.10.144:
  vars:
    ansible_ssh_user: scylla
    ansible_install_method: apt

vault_server:
  hosts:
    35.180.36.184:
  vars:
    ansible_ssh_user: ubuntu
    vault_backend: file
    vault_cluster_disable: True
    vault_awskms: True
    nginx_custom_vhost: vault
    nginx_ssl_enable: false
    vault_awskms_key_id: "f76441bb-58f8-4002-93ad-18a35e244457"
    vault_awskms_region: "ap-northeast-1"
    vault_awskms_access_key: "AKIAITMA2UUB7HHVW3DQ"
    vault_awskms_secret_key: "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"

consul_server:
  hosts:
    35.180.203.241:
  vars:
    ansible_ssh_user: ubuntu
    server_name: 'consul-sd'
    netdata_mode: 'slave'
    netdata_monitor_application: ['nginx']
    consul_mode: 'server'
    firewall_open_ports: [80,8300,8301,8500,8600,19999]
    nginx_custom_vhost: consul
    cluster_private_ips:
      - 10.0.0.231

consul_client:
  hosts:
    52.47.75.83:
      server_name: 'deepstream-1'
  vars:
    ansible_ssh_user: ubuntu
    consul_mode: 'client'
    health_check_script_enabled: true
    monitor_application_name: 'deepstream'


consul_template:
  hosts:
    35.180.226.115:
  vars:
    ansible_ssh_user: ubuntu
    server_name: 'consul-client'
    consul_mode: 'client'
    health_check_script_enabled: true
    monitor_application_name: 'haproxy'
    consul_template_use_systemd: true
    consul_template_client_file: 'haproxy.ctmpl'
    consul_template_templates:
      - name: 'haproxy.ctmpl'
        dest: '/etc/haproxy/haproxy.cfg'
        cmd: 'sudo /etc/init.d/haproxy reload || true'
        perms: 600
        backup: true
        wait: '2s:6s'

netdata_server:
  hosts:
    35.180.187.209:
  vars:
    ansible_ssh_user: ubuntu
    server_name: 'netdata-server'
    netdata_mode: 'master'
    netdata_monitor_application: ['nginx','ntp']
    consul_mode: 'client'
    firewall_open_ports: [80,8300,8301,19999]
    nginx_custom_vhost: netdata
    netdata_uuid: 'acccdf56-1afa-11e9-bfdd-06903a0c33e6'


kafka_monitor:
  hosts:
    68.183.84.99:
  vars:
    ansible_ssh_user: root
    server_name: 'kafka-manager'
    java_home: "/usr/java/jdk1.8.0_131"
    kafka_manager_zk: "68.183.88.69:2181,68.183.88.80:2181,68.183.88.62:2181"
    kafka_manager_port: 8080
    nginx_custom_vhost: kafkaMonitor
    kafka_rest_ip: "68.183.88.69"


prometheus_server:
  hosts:
    159.89.167.63:
  vars:
    ansible_ssh_user: root
    server_name: 'prometheus_server'
    prometheus_scrape_configs:
      - job_name: 'production-scrape'
        metrics_path: '/api/v1/allmetrics'
        params:
          format: [prometheus_all_hosts]
        honor_labels: true
        static_configs:
          - targets: ['159.65.152.64:19999']

grafana_server:
  hosts:
    159.89.167.63:
  vars:
    ansible_ssh_user: root
    server_name: 'grafana_server'
    grafana_security: 
      admin_user: admin
      admin_password: amitkverma
    grafana_datasources:
      - name: netdata
        type: prometheus
        access: proxy
        url: 'http://localhost:9090'
        basicAuth: false
    grafana_dashboards:
      - dashboard_id: 7107
        revision_id: 1
        datasource: netdata

