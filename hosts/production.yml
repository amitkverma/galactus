# Add each host to the [production] group and to a "type" group such as [web] or [db].
# List each machine only once per [group], even if it will host multiple sites.
all:
  vars:
    ansible_connection: ssh
    netdata_uuid: '2c288770-9fa7-11e8-9a86-ab3f9df0a5a8'
    netdata_master_ip: '139.59.50.202' # Netdata floating IP
    deny_default_user: 'ubuntu'
    prod_consul_datacenter: 'do-blr'
    prod_consul_domain: 'charcoaleats'
    consul_server_ip: '159.89.163.216' # Consul Private IP
    redis_password: 473d67d08db4314ef0366d2504e37e9f44168abe
    redis_deepstream_port: 6379
    redis_deepstream_server: 'redis-cache.charcoaleats.com'
    deepstream_websocket_port: 5757
    deepstream_websocket_port_lb: 443
    deepstream_http_port: 8787
    pm2_user: root
    nodejs_application_port: 8888
    ssh_git_user: aldous
    deepstream_auth_url: https://api.charcoaleats.com/open/live/authenticateUser
    git_host: gitlab.charcoalbiryani.com
    nodejs_install_npm_user: root
    env_host_name: www.charcoaleats.com
    nodejs_cpo_port: 8001
    nodejs_api_port: 8888
    admin_user: aldous
    users:
      - name: "hanzo" # Admin User
        groups:
          - sudo
        keys:
          - "{{ lookup('file', '/Users/amitverma/Projects/side-projects/galactus/pub_keys/hanzo.pub') }}"
      - name: "aldous" # Ansible User 
        groups:
          - sudo
        keys:
          - "{{ lookup('file', '/Users/amitverma/Projects/side-projects/galactus/pub_keys/aldous.pub') }}"    


consul_server:
  hosts:
    159.89.163.216:
  vars:
    ansible_ssh_user: root
    server_name: 'consul-sd'
    netdata_mode: 'slave'
    netdata_monitor_application: ['nginx']
    consul_mode: 'server'
    firewall_open_ports: [80,8300,8301,8500,8600,19999]
    nginx_custom_vhost: consul

netdata_server:
  hosts:
    159.65.152.64:
  vars:
    ansible_ssh_user: root
    server_name: 'netdata-server'
    netdata_mode: 'master'
    netdata_monitor_application: ['nginx']
    consul_mode: 'client'
    firewall_open_ports: [80,8300,8301,19999]
    nginx_custom_vhost: netdata

redis_msg_bus:
  hosts:
    13.232.230.45:
      consul_ip: '172.31.17.8'
  vars:
    ansible_ssh_user: dranzer
    server_name: 'redis-msg-bus'
    netdata_mode: 'slave'
    netdata_monitor_application: ['redis']
    consul_mode: 'client'
    firewall_open_ports: [8300,8301,19999,6363]
    nginx_custom_vhost: netdata
    redis_port: '{{ redis_deepstream_port }}'
    monitor_application_name: 'redis_msg_bus'
    health_check_script_enabled: true

deepstream_server:
  hosts:
    13.232.17.35:
        server_name: 'deepstream-node-1'
        consul_ip: '172.31.22.244'
    13.127.75.195:
        server_name: 'deepstream-node-2'
        consul_ip: '172.31.1.7'
  vars:
    ansible_ssh_user: dranzer
    netdata_mode: 'slave'
    netdata_monitor_application: []
    consul_mode: 'client'
    firewall_open_ports: [5757,8300,8301,19999,6363]
    is_redis_msg_plugin_used: true
    monitor_application_name: 'deepstream'
    deepstream_auth_enable: true
    health_check_script_enabled: true

deepstream_haproxy_lb:
  hosts:
    13.126.165.43:
        consul_ip: '172.31.22.29'
  vars:
    ansible_ssh_user: dranzer
    server_name: 'deepstream-loadbalancer'
    netdata_mode: 'slave'
    netdata_monitor_application: ['haproxy']
    consul_mode: 'client'
    firewall_open_ports: [443,8300,8301,19999,5757]
    haproxy_custom_vhost: deepstream
    deepstream_server:
      - name: 'deepstream_s1'
        host: '13.232.17.35'
      - name: 'deepstream_s2'
        host: '13.127.75.195'
    haproxy_ssl_enable: true
    monitor_application_name: 'haproxy'
    health_check_script_enabled: true

nodejs_server:
  hosts:
    52.66.198.22:
      server_name: 'application-server-1'
      consul_ip: '172.31.30.230'
    13.126.84.246:
      server_name: 'application-server-2'
      consul_ip: '172.31.27.168'
    52.66.238.194:
      server_name: 'application-server-3'
      consul_ip: '172.31.4.148'
    13.232.125.183:
      server_name: 'worker-server'
      consul_ip: '172.31.24.177'
  vars:
    ansible_ssh_user: dranzer
    netdata_mode: 'slave'
    netdata_monitor_application: ['nodejs']
    consul_mode: 'client'
    firewall_open_ports: [8888,8300,8301,19999]
    monitor_application_name: 'nodejs'
    health_check_script_enabled: true

api_haproxy_lb:
  hosts:
    13.126.200.25:
      server_name: 'lb-api-primary'
      consul_ip: '172.31.10.115'
    13.126.252.174:
      server_name: 'lb-api-backup'
      consul_ip: '172.31.27.91'
  vars:
    ansible_ssh_user: cerberus
    netdata_mode: 'slave'
    netdata_monitor_application: ['haproxy']
    consul_mode: 'client'
    firewall_open_ports: [443,8300,8301,19999]
    haproxy_custom_vhost: api
    node_server:
      - name: 'node_s1'
        host: '52.66.198.22'
      - name: 'node_s2'
        host: '13.126.84.246'
      - name: 'node_s3'
        host: '52.66.238.194'
    haproxy_ssl_enable: true
    monitor_application_name: 'haproxy'
    health_check_script_enabled: true

contly_server:
  hosts:
    139.59.21.36:
      server_name: 'countly-server'
  vars:
    ansible_ssh_user: root
    netdata_mode: 'slave'
    netdata_monitor_application: ['nodejs']
    consul_mode: 'client'
    firewall_open_ports: [22, 443,80]
    monitor_application_name: 'nodejs'
    health_check_script_enabled: true


elk_stack_server:
  hosts:
    206.189.138.104:
      server_name: 'elk_stack-server'
  vars:
    ansible_ssh_user: cerberus
    netdata_mode: 'slave'
    netdata_monitor_application: ['nginx']
    consul_mode: 'client'
    firewall_open_ports: [22,80,443, 9200, 9300,5044,8200]
    monitor_application_name: 'nodejs'
    health_check_script_enabled: true
    nginx_custom_vhost: elk
    nginx_ssl_enable: true

nextCloud:
  hosts:
    142.93.218.187:
  vars:
    ansible_ssh_user: root
    nextcloud_trusted_domain:
      - "files.charcoaleats.com"
    nextcloud_websrv: "nginx"
    nextcloud_admin_pwd: "charcoal007"
    nextcloud_db_pwd: "f7f01ff233e206f578cfece290ab5225ee0d049b"
    nextcloud_tls_cert_method: "signed"
    nextcloud_tls_src_cert: "/Users/amitverma/Projects/side-projects/galactus/pub_keys/charcoaleats.crt"
    nextcloud_tls_src_cert_key: "/Users/amitverma/Projects/side-projects/galactus/pub_keys/charcoaleats.key"
    nextcloud_mysql_root_pwd: "af3cc85dead57bd6b63aee0b6f13f7491c40980b"


redis_cache:
  hosts:
    13.232.171.41:
      consul_ip: '172.31.19.148'
  vars:
    ansible_ssh_user: ubuntu
    server_name: 'redis_cache'
    netdata_mode: 'slave'
    netdata_monitor_application: ['redis']
    consul_mode: 'client'
    firewall_open_ports: [8300,8301,19999,6363,6379]
    nginx_custom_vhost: netdata
    redis_port: '6379'
    monitor_application_name: 'redis_msg_bus'
    health_check_script_enabled: true
    redis_password: 473d67d08db4314ef0366d2504e37e9f44168abe

ipaservers:
  hosts:
    52.47.183.32:
  vars:
    ansible_ssh_user: hanzo
    ansible_install_method: apt
    ipaserver_hostname: ipa.charcoaleats.com
    ipaserver_domain: charcoaleats.com
    ipaserver_realm: CHARCOALEATS.COM
    ipaadmin_password: 38bee9d7a40ac2a0df83b1bd321a4708a31f7867
    ipadm_password: 38bee9d7a40ac2a0df83b1bd321a4708a31f7867
    ipaserver_setup_dns: yes
    ipaserver_auto_forwarders: yes
    ipaserver_allow_zone_overlap: yes
    ipaclient_mkhomedir: yes
    ipaserver_no_ui_redirect: no
    git_repos: 
        - remote_url: "git@gitlab.charcoalbiryani.com:charcoal-biryani/charcoal-ansible-scripts.git"
          path: /opt/software/charcoal-ansible-scripts

ipaclients:
  hosts:
    10.0.1.61:
    10.0.1.160:
    10.0.0.34:
    10.0.0.227:
  vars:
    ansible_ssh_user: ubuntu
    ipaclient_domain: charcoaleats.com
    ipaserver_realm: CHARCOALEATS.COM
    ipaadmin_principal: admin
    ipaadmin_password: 38bee9d7a40ac2a0df83b1bd321a4708a31f7867
    ipaclient_allow_repair: yes
    krb5_packages: krb5-k5tls


kafka_monitor:
  hosts:
    35.181.4.201:
  vars:
    ansible_ssh_user: ubuntu
    java_home: "/usr/java/jdk1.8.0_131"
    kafka_manager_zk: "10.0.1.71:2181,10.0.1.151:2181,10.0.1.57:2181"
    kafka_manager_port: 8080
    ansible_install_method: apt
    nginx_custom_vhost: kafkaMonitor
    nodejs_npm_global_packages: 
        - bower
    fetch_repo_from_remote_host: true
    nginx_ssl_enable: true
    kafka_rest_ip: "10.0.1.71"
    git_repos: 
        - remote_url: "git@gitlab.charcoalbiryani.com:charcoal-biryani/charcoal-kafka.git"
          path: /opt/software/charcoal-kafka
        - remote_url: "git@gitlab.charcoalbiryani.com:charcoal-biryani/charcoal-kafka-monitor-angular.git"
          path: /var/www/charcoal-kafka-monitor-angular

gitlab_server:
  hosts:
    52.47.98.10:
  vars:
    ansible_ssh_user: ubuntu
    gitlab_external_url: "https://gitlab.charcoaleats.com"
    gitlab_redirect_http_to_https: "true"
    gitlab_ssl_certificate: "/etc/ssl/charcoaleats.crt"
    gitlab_ssl_certificate_key: "/etc/ssl/charcoaleats.key"
    nginx_ssl_enable: true
    gitlab_domain: "gitlab.charcoaleats.com"
    nginx_custom_vhost: gitlab
    gitlab_nginx_listen_https: 443
