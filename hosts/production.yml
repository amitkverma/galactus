# Add each host to the [production] group and to a "type" group such as [web] or [db].
# List each machine only once per [group], even if it will host multiple sites.
all:
  vars:
    ansible_connection: ssh
    deny_default_user: 'ubuntu'
    prod_consul_datacenter: 'aws-mumbai'
    prod_consul_domain: 'charcoaleats'
    redis_password: 473d67d08db4314ef0366d2504e37e9f44168abe
    redis_deepstream_port: 6379
    redis_deepstream_server: '10.0.11.149'
    deepstream_websocket_port: 5757
    deepstream_websocket_port_lb: 443
    deepstream_http_port: 8787
    pm2_user: root
    nodejs_application_port: 8888
    ssh_git_user: aldous
    deepstream_auth_url: https://api.charcoaleats.com/open/live/authenticateUser
    git_host: gitlab.charcoaleats.com
    nodejs_install_npm_user: root
    env_host_name: www.charcoaleats.com
    nodejs_cpo_port: 8001
    nodejs_api_port: 8888
    admin_user: aldous
    users:
      - name: "hanzo" # Admin User
        groups:
          - sudo
        keys:
          - "{{ lookup('file', '/home/cloud9/workspace/charcoal-ansible-scripts/pub_keys/hanzo.pub') }}"
      - name: "aldous" # Ansible User 
        groups:
          - sudo
        keys:
          - "{{ lookup('file', '/home/cloud9/workspace/charcoal-ansible-scripts/pub_keys/aldous.pub') }}"    
    # Mysql configs
    mysql_replication_master: '10.0.9.180'
    shared_mysql_user: { name: "granger", password: "hsEaYZAfRzt?RPPyq!y@2dx&" , host: "%" } 
    proxysql_mysql_monitor: { name: monitor,  password: 'F89QLe^&4^Dm?dZgNRZ=eR*Nt' , host: "%" }
    shared_mysql_database: "CHARCOAL_PRODUCTION_DB"




contly_server:
  hosts:
    139.59.21.36:
      server_name: 'countly-server'
  vars:
    ansible_ssh_user: root
    netdata_mode: 'slave'
    netdata_monitor_application: ['nodejs']
    consul_mode: 'client'
    firewall_open_ports: [22, 443,80]
    monitor_application_name: 'nodejs'
    health_check_script_enabled: true

nextCloud:
  hosts:
    142.93.218.187:
  vars:
    ansible_ssh_user: root
    nextcloud_trusted_domain:
      - "files.charcoaleats.com"
    nextcloud_websrv: "nginx"
    nextcloud_admin_pwd: "charcoal007"
    nextcloud_db_pwd: "f7f01ff233e206f578cfece290ab5225ee0d049b"
    nextcloud_tls_cert_method: "signed"
    nextcloud_tls_src_cert: "/home/cloud9/workspace/charcoal-ansible-scripts/pub_keys/charcoaleats.crt"
    nextcloud_tls_src_cert_key: "/home/cloud9/workspace/charcoal-ansible-scripts/pub_keys/charcoaleats.key"
    nextcloud_mysql_root_pwd: "af3cc85dead57bd6b63aee0b6f13f7491c40980b"


redis_cache:
  hosts:
    13.232.171.41:
      consul_ip: '172.31.19.148'
  vars:
    ansible_ssh_user: ubuntu
    server_name: 'redis_cache'
    netdata_mode: 'slave'
    netdata_monitor_application: ['redis']
    consul_mode: 'client'
    firewall_open_ports: [8300,8301,19999,6363,6379]
    nginx_custom_vhost: netdata
    redis_port: '6379'
    monitor_application_name: 'redis_msg_bus'
    health_check_script_enabled: true
    redis_password: 473d67d08db4314ef0366d2504e37e9f44168abe


# New Infra start here

ipaservers:
  hosts:
    52.66.88.208:
  vars:
    ansible_ssh_user: hanzo
    server_name: 'provision-server'
    ansible_install_method: apt
    ipaserver_hostname: ipa.charcoaleats.com
    ipaserver_domain: charcoaleats.com
    ipaserver_realm: CHARCOALEATS.COM
    ipaadmin_password: 38bee9d7a40ac2a0df83b1bd321a4708a31f7867
    ipadm_password: 38bee9d7a40ac2a0df83b1bd321a4708a31f7867
    ipaserver_setup_dns: yes
    ipaserver_auto_forwarders: yes
    ipaserver_allow_zone_overlap: yes
    ipaclient_mkhomedir: yes
    ipaserver_no_ui_redirect: no
    firewall_open_ports: [8181]
    should_install_pm2_on_nodejs: false
    cloud9_username: hanzo
    cloud9_password: amitkverma
    consul_mode: 'client'
    netdata_monitor_application: ['ntp','monit','fail2ban']
    monit_application_name: ['consul','netdata']
    netdata_mode: 'slave'
    monitor_application_name: ipa
    git_repos: 
        - remote_url: "git@gitlab.charcoalbiryani.com:charcoal-biryani/charcoal-ansible-scripts.git"
          path: /opt/software/charcoal-ansible-scripts

consul_server:
  hosts:
    13.233.204.215:
  vars:
    ansible_ssh_user: hanzo
    server_name: 'consul-server'
    netdata_mode: 'slave'
    nginx_ssl_enable: true
    netdata_monitor_application: ['nginx','ntp','monit','fail2ban']
    monit_application_name: ['nginx','consul','netdata']
    consul_mode: 'server'
    firewall_open_ports: [80,8300,8301,8500,8600,19999]
    nginx_custom_vhost: consul
    monitor_application_name: consul
    cluster_private_ips:
      - 10.0.1.10

netdata_server:
  hosts:
    10.0.2.10:
  vars:
    ansible_ssh_user: hanzo
    server_name: 'netdata-server'
    netdata_mode: 'master'
    netdata_monitor_application: ['nginx','ntp','monit','fail2ban']
    monit_application_name: ['consul', 'netdata', 'nginx']
    consul_mode: 'client'
    firewall_open_ports: [80,8300,8301,19999]
    nginx_custom_vhost: netdata
    nginx_ssl_enable: true
    monitor_application_name: netdata
    netdata_uuid: '507d01bd-ae4f-4216-bf61-982140600aff'

gitlab_server:
  hosts:
    10.0.3.10:
  vars:
    server_name: 'gitlab-server'
    ansible_ssh_user: hanzo
    gitlab_external_url: "https://gitlab.charcoaleats.com"
    nginx_ssl_enable: true
    gitlab_domain: "gitlab.charcoaleats.com"
    nginx_custom_vhost: gitlab
    consul_mode: 'client'
    netdata_monitor_application: ['ntp','monit','fail2ban']
    monit_application_name: ['consul', 'netdata', 'gitlab']
    netdata_mode: 'slave'
    monitor_application_name: gitlab

vault_server:
  hosts:
    10.0.0.147:
  vars:
    server_name: 'vault-server'
    ansible_ssh_user: hanzo
    vault_backend: file
    vault_cluster_disable: True
    vault_awskms: True
    nginx_custom_vhost: vault
    nginx_ssl_enable: true
    vault_awskms_key_id: "f76441bb-58f8-4002-93ad-18a35e244457"
    vault_awskms_region: "ap-northeast-1"
    vault_awskms_access_key: "AKIAITMA2UUB7HHVW3DQ"
    vault_awskms_secret_key: "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"
    consul_mode: 'client'
    netdata_monitor_application: ['nginx','ntp','monit','fail2ban']
    monit_application_name: ['consul', 'netdata', 'vault', 'nginx']
    netdata_mode: 'slave'
    monitor_application_name: vault

kafka_monitor:
  hosts:
    13.232.70.108:
  vars:
    ansible_ssh_user: hanzo
    server_name: 'kafka-manager'
    java_home: "/usr/java/jdk1.8.0_131"
    kafka_manager_zk: "10.0.13.7:2181,10.0.8.126:2181,10.0.13.107:2181"
    kafka_manager_port: 8080
    ansible_install_method: apt
    nginx_custom_vhost: kafkaMonitor
    nodejs_npm_global_packages: 
        - bower
    fetch_repo_from_remote_host: true
    nginx_ssl_enable: true
    kafka_rest_ip: "10.0.13.7"
    consul_mode: 'client'
    netdata_monitor_application: ['nginx','ntp', 'monit']
    netdata_mode: 'slave'
    monitor_application_name: kafka-manager
    git_repos: 
        - remote_url: "git@gitlab.charcoaleats.com:charcoaleats/charcoal-kafka.git"
          path: /opt/software/charcoal-kafka
        - remote_url: "git@gitlab.charcoaleats.com:charcoaleats/charcoal-kafka-monitor-angular.git"
          path: /var/www/charcoal-kafka-monitor-angular

monitoring_stack:
  hosts:
    13.126.56.240:
  vars:
    ansible_ssh_user: ubuntu
    server_name: 'monitoring-stack'
    prometheus_scrape_configs:
      - job_name: 'production'
        metrics_path: '/api/v1/allmetrics'
        params:
          format: [prometheus_all_hosts]
        honor_labels: true
        static_configs:
          - targets: ['10.0.2.10:19999']
    grafana_security: 
      admin_user: admin
      admin_password: amitkverma
    grafana_datasources:
      - name: netdata
        type: prometheus
        access: proxy
        url: 'http://localhost:9090'
        basicAuth: false
    grafana_dashboards:
      - dashboard_id: 7107
        revision_id: 1
        datasource: netdata
        
        
redis_msg_bus:
  hosts:
    10.0.11.149:
  vars:
    ansible_ssh_user: hanzo
    server_name: 'redis-msg-bus'
    netdata_mode: 'slave'
    netdata_monitor_application: ['redis', 'monit', 'ntp', 'fail2ban']
    monit_application_name: ['consul', 'netdata', 'redis_msg_bus']
    monitor_application_name: 'redis_msg_bus'
    netdata_monitor_application: []
    consul_mode: 'client'
    firewall_open_ports: [8300,8301,19999,6363]
    redis_port: '{{ redis_deepstream_port }}'
    health_check_script_enabled: true

deepstream_server:
  hosts:
    10.0.9.99:
        server_name: 'deepstream-node-1'
    10.0.11.151:
        server_name: 'deepstream-node-2'
  vars:
    ansible_ssh_user: hanzo
    netdata_mode: 'slave'
    consul_mode: 'client'
    netdata_monitor_application: [ 'monit', 'ntp', 'fail2ban']
    monit_application_name: ['consul', 'netdata', 'deepstream']
    monitor_application_name: 'deepstream'
    firewall_open_ports: [5757,8300,8301,19999,6363]
    is_redis_msg_plugin_used: true
    deepstream_auth_enable: true
    health_check_script_enabled: true

deepstream_haproxy_lb:
  hosts:
    10.0.6.230:
  vars:
    ansible_ssh_user: hanzo
    server_name: 'deepstream-loadbalancer'
    netdata_mode: 'slave'
    netdata_monitor_application: ['haproxy', 'monit', 'ntp', 'fail2ban']
    monit_application_name: ['consul', 'netdata', 'haproxy']
    consul_mode: 'client'
    firewall_open_ports: [443,8300,8301,19999,5757]
    haproxy_custom_vhost: deepstream
    deepstream_server:
      - name: 'deepstream-node-1'
        host: '10.0.9.99'
      - name: 'deepstream-node-2'
        host: '10.0.11.151'
    haproxy_ssl_enable: True
    monitor_application_name: 'haproxy'
    health_check_script_enabled: true
    consul_template_use_systemd: true
    consul_template_config_file: 'haproxy.hcl'
    consul_template_client_file: 'deepstream.ctmpl'
    consul_template_templates:
      - name: 'deepstream.ctmpl'
        dest: '/etc/haproxy/haproxy.cfg'
        cmd: 'sudo /etc/init.d/haproxy reload || true'
        perms: 600cd /
        backup: true
        wait: '2s:6s'


elk_stack:
  hosts:
    10.0.5.59:
      consul_ip: '10.0.5.59'
  vars:
    ansible_ssh_user: hanzo
    server_name: 'elk-stack'
    java_packages:
      - openjdk-8-jdk
    filebeat_output_logstash_hosts:
      - "10.0.5.59:5044"
    logstash_monitor_local_syslog: false
    nginx_custom_vhost: 'elk'
    logstash_enabled_on_boot: true
    logstash_install_plugins:
      - logstash-input-beats
    logstash_elasticsearch_hosts:
      - http://localhost:9200
    logstash_listen_port_beats: 5044
    netdata_mode: 'slave'
    netdata_monitor_application: []
    consul_mode: 'client'
    monitor_application_name: 'elk'
    health_check_script_enabled: true
    nginx_domain: 'elk.charcoaleats.com'
    nginx_ssl_enable: true


api_haproxy_lb:
  hosts:
    10.0.5.139:
      server_name: 'api-primary'
  vars:
    ansible_ssh_user: hanzo
    netdata_mode: 'slave'
    netdata_monitor_application: ['haproxy', 'monit', 'ntp', 'fail2ban']
    monit_application_name: ['consul', 'netdata', 'haproxy']
    monitor_application_name: 'haproxy'
    consul_mode: 'client'
    firewall_open_ports: [443,8300,8301,19999]
    haproxy_custom_vhost: api
    node_server:
      - name: 'application-server-1'
        host: '10.0.11.56'
      - name: 'application-server-2'
        host: '10.0.13.16'
    haproxy_ssl_enable: true
    health_check_script_enabled: true
    consul_template_use_systemd: true
    consul_template_config_file: 'haproxy.hcl'
    consul_template_client_file: 'haproxy.ctmpl'
    consul_template_templates:
      - name: 'haproxy.ctmpl'
        dest: '/etc/haproxy/haproxy.cfg'
        cmd: 'sudo /etc/init.d/haproxy reload || true'
        perms: 600cd /
        backup: true
        wait: '2s:6s'


nodejs_server:
  hosts:
    10.0.11.56:
      server_name: 'application-server-1'
    10.0.13.16:
      server_name: 'application-server-2'
  vars:
    ansible_ssh_user: hanzo
    netdata_mode: 'slave'
    netdata_monitor_application: ['nodejs', 'monit', 'ntp', 'fail2ban']
    consul_mode: 'client'
    firewall_open_ports: [8888,8300,8301,19999]
    monit_application_name: ['consul', 'netdata', 'nodejs']
    monitor_application_name: 'nodejs'
    health_check_script_enabled: true
    git_repos: 
      - remote_url: "git@gitlab.charcoaleats.com:charcoaleats/charcoal-dashboard-api.git"
        path: /opt/software/charcoal-api

worker_node_server:
  hosts:
    10.0.13.238:
      server_name: 'worker-server'
  vars:
    ansible_ssh_user: hanzo
    netdata_mode: 'slave'
    netdata_monitor_application: ['nodejs', 'monit', 'ntp', 'fail2ban']
    consul_mode: 'client'
    firewall_open_ports: [8888,8300,8301,19999]
    monit_application_name: ['consul', 'netdata', 'nodejs']
    monitor_application_name: 'worker'
    health_check_script_enabled: true
    git_repos: 
      - remote_url: "git@gitlab.charcoaleats.com:charcoaleats/charcoal-dashboard-api.git"
        path: /opt/software/charcoal-api


# Mysql Server Group

proxysql_server:
  hosts:
    10.0.1.228:
      server_name: 'proxysql'
  vars:
    ansible_ssh_user: hanzo
    shared_multi_primary: true
    shared_require_ssl: false
    shared_private_networking: true
    netdata_mode: 'slave'
    netdata_monitor_application: ['proxysql', 'monit', 'ntp', 'fail2ban']
    monit_application_name: ['consul', 'netdata', 'proxysql']
    monitor_application_name: proxysql
    consul_mode: 'client'
    monitor_application_name: 'proxysql'
    health_check_script_enabled: true

mysql_replication: 
  hosts:
    10.0.9.180:
      primary: True
      server_name: 'mysql-server-gr-p'
    10.0.11.25:
      primary: False
      server_name: 'mysql-server-gr-s1'
    10.0.12.189:
      primary: False
      server_name: 'mysql-server-gr-s2'
  vars:
    ansible_ssh_user: hanzo
    server_name: 'mysql'
    mysql_group_replication: true
    mysql_group_replication_uuid: "419fa19a-8059-11e9-b3d7-02fa3598e1b2"
    mysql_proxysql_backend_config: true
    netdata_mode: 'slave'
    netdata_monitor_application: ['mysql','monit', 'ntp','fail2ban']
    monit_application_name: ['consul', 'netdata', 'mysql']
    consul_mode: 'client'
    monitor_application_name: 'mysql'
    health_check_script_enabled: true


mysql_slave: 
  hosts:
    10.0.4.158:
      mysql_server_id: 11
      server_name: 'mysql-report-server'
    10.0.0.174:
      mysql_server_id: 12
      server_name: 'mysql-slave'
  vars:
    ansible_ssh_user: hanzo
    mysql_replication_role: 'slave'
    mysql_replication_user: { name: slaveUser, host: '%', password: 'amitkverma' } 
    enable_mysql_slave_replication: true
    is_mysql_group_replication_mode: true
    nginx_custom_vhost: 'report'
    site_name: 'report.charcoaleats.com'
    nginx_ssl_enable: true
    netdata_mode: 'slave'
    netdata_monitor_application: ['mysql','monit', 'ntp','fail2ban']
    monit_application_name: ['consul', 'netdata', 'mysql']
    consul_mode: 'client'
    monitor_application_name: 'mysql'
    health_check_script_enabled: true
    
    
    